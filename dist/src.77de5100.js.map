{"version":3,"sources":["Settings.ts","UnknownParam.ts","VmSize.ts","DatastoreSize.ts","HostSize.ts","OtherDataSize.ts","EventsData.ts","PerformanceSize.ts","VbrEvents.ts","VbrDbTime.ts","index.ts","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["interface settingsUpdateInter {\r\n  avNicsHost: number,\r\n  avNumVDisksVm: number,\r\n  avNumGDiskVm: number,\r\n  avSdPerHost: number,\r\n  historicPerfData: number,\r\n  eventsHistory: number,\r\n  vmQty: number,\r\n  hostQty: number,\r\n  clusterQty: number,\r\n  vappQty: number,\r\n  datastoreQty: number,\r\n}\r\n\r\ninterface returnSettings {\r\n  vmThreashold: number,\r\n  resourcePoolQty: number;\r\n  clusterQty: number;\r\n  vappQty: number;\r\n  datastoreQty: number;\r\n  avNicsHost: number;\r\n  avNumVDisksVm: number;\r\n  avNumGDiskVm: number;\r\n  avSdPerHost: number;\r\n  avSpPerHost: number;\r\n  historicPerfData: number;\r\n  eventsHistory: number;\r\n}\r\n\r\nexport class InfraSettings {\r\n  // Calculation ratios\r\n  private datastoreRatio = 200; // vm to datastore ratio\r\n  // private hostRatio = 50; // provided by user input\r\n  private rPoolRatio = 100; // vm to resource pool ratio\r\n  private clusterRatio = 10; // host to clusters\r\n  private vappRatio = 50; // vm to vapp ratio\r\n\r\n  //Average values\r\n  avNumDsOneVm = 0; // Average datastores with one vm- not changeable\r\n  avNicsHost = 4;\r\n  avNumVDisksVm = 3;\r\n  avNumGDiskVm = 0;\r\n  avSdPerHost = 2;\r\n  avSpPerHost = 2; // used by host data size\r\n  historicPerfData = 12;\r\n  eventsHistory = 12;\r\n\r\n  // These are calculated values is using simple mode\r\n  vmThreashold = 1500;\r\n  vmQty = 0\r\n  hostQty = 0;\r\n  resourcePoolQty = 0;\r\n  clusterQty = 0;\r\n  vappQty = 0;\r\n  datastoreQty = 0;\r\n\r\n  updateQty(vmCount: number, hosts: number): void {\r\n    // calculate these values based on the VM count\r\n    // in simple mode.\r\n    this.vmQty = vmCount;\r\n    this.hostQty = hosts;\r\n    this.resourcePoolQty = Math.ceil(vmCount / this.rPoolRatio);\r\n    this.clusterQty = Math.ceil(hosts / this.clusterRatio);\r\n    this.vappQty = Math.ceil(vmCount / this.vappRatio);\r\n    this.datastoreQty = Math.ceil(vmCount / this.datastoreRatio);\r\n  }\r\n\r\n  // To be used when you run advanced\r\n  getSettings(): returnSettings{\r\n    return {\r\n      vmThreashold: this.vmThreashold,\r\n      resourcePoolQty: this.resourcePoolQty,\r\n      clusterQty: this.clusterQty,\r\n      vappQty: this.vappQty,\r\n      datastoreQty: this.datastoreQty,\r\n      avNicsHost: this.avNicsHost,\r\n      avNumVDisksVm: this.avNumVDisksVm,\r\n      avNumGDiskVm: this.avNumGDiskVm,\r\n      avSdPerHost: this.avSdPerHost,\r\n      avSpPerHost: this.avSpPerHost,\r\n      historicPerfData: this.historicPerfData,\r\n      eventsHistory: this.eventsHistory\r\n    }\r\n  }\r\n\r\n  set updateSettings(data: settingsUpdateInter) {\r\n      this.avNicsHost = data.avNicsHost;\r\n      this.avNumVDisksVm = data.avNumVDisksVm;\r\n      this.avNumGDiskVm = data.avNumGDiskVm;\r\n      this.avSdPerHost = data.avSdPerHost;\r\n      this.historicPerfData = data.historicPerfData;\r\n      this.eventsHistory = data.eventsHistory;\r\n      this.vmQty = data.vmQty;\r\n      this.hostQty = data.hostQty;\r\n      this.clusterQty = data.clusterQty;\r\n      this.vappQty = data.vappQty;\r\n      this.datastoreQty = data.datastoreQty;\r\n  }\r\n}\r\n\r\nexport class VeeamSettings {\r\n  // Veeam ratios\r\n  vbrVmRatio = 1500;\r\n  proxyToVmRatio = 400; // TODO need to look at this\r\n  repoRatio = 2;\r\n  wanAccRatio = 0;\r\n  vmsPerJobRatio = 70;\r\n  jobsRatio = 70; // might not need this\r\n  restoreRatio = 1000; // one restore per 1000 VMs per-day\r\n\r\n  // Calculated values\r\n  entermanQty = 1; // hard coded\r\n  vbrServers = 1;\r\n  vbrAvNumProxy = 0; // Average number of Proxy  per VBR\r\n  vbrAvNumRepo = 0; // Average number of Repositories  per VBR\r\n  vbrAvJobsServer = 0;  // Average number of Jobs per backup server\r\n  vbrAvNumWan = 0; // Average number of WAN Accelerators  per VBR - hardcoded\r\n  vbrRestore = 0;\r\n\r\n  // non-calculated\r\n  vmQty = 0;\r\n  historicPerfData = 12; // only updated if advanced is used\r\n  eventsHistory = 12;\r\n\r\n  updateQty(vmCount: number){\r\n    this.vmQty = vmCount;\r\n    this.vbrServers = Math.ceil(vmCount / this.vbrVmRatio);\r\n    this.vbrAvNumRepo = Math.ceil(this.vbrServers * this.repoRatio);\r\n    // this.vbrAvNumProxy = Math.ceil(vmCount / this.proxyToVmRatio);\r\n    this.vbrAvNumProxy = Math.ceil(this.proxyCal());\r\n    this.vbrAvJobsServer = Math.ceil(vmCount / this.jobsRatio) / this.vbrServers;\r\n    this.vbrRestore = Math.ceil(vmCount / this.restoreRatio);\r\n  }\r\n\r\n  updateSettings(historicPerfData: number, eventsHistory: number) {\r\n    // only exception are these\r\n    this.historicPerfData = historicPerfData;\r\n    this.eventsHistory = eventsHistory;\r\n  }\r\n\r\n  proxyCal(): number{\r\n    const calculation = ((((this.vmQty * 51200) *0.05 )/ (8 * 3600)) / 25);\r\n    return calculation\r\n  }\r\n}\r\n","export class Unknown {\r\n  unknownParam = 0.113828584342402;\r\n  unknownParamExtended: number;\r\n\r\n  constructor() {\r\n    this.unknownParamExtended = 0.113828584342402 / 1024 / 1024;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport {InfraSettings } from './Settings';\r\n\r\ninterface VmSizeInter extends General {\r\n  vmCount: number; // VMs\r\n  avNumDsOneVm: number; // Average number of Datastores where one VM stored\r\n  avNicsHost: number; // Average number of NICs per Host >> as in physical host\r\n  avNumVDisksVm: number; // Average number of virtual disks per VM\r\n  avNumGDiskVm: number; // Average number of Guest Disk per VM\r\n}\r\n\r\n// Interesting that this doesn't include NICS per-host where the VMware version does\r\ninterface HvVmSizeInter extends General {\r\n  hvVmCount: number; // VMs\r\n  hvAvNumNicsVm: number; // Average number of NICs per VM\r\n  haAvNumVdVm: number; // Average number of virtual disks per VM\r\n  hvAvNumGdVm: number; // Average number of Guest Disk per VM\r\n}\r\n\r\n// need to create each class passing in the settings object\r\nclass VmSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  vmSize(): number { // data: VmSizeInter\r\n    const monthDays = 30.44 * this.settings.historicPerfData; // data.historicPerData\r\n    const vmCount = this.settings.vmQty; // changed the name so it doesn't break\r\n    const result =\r\n      vmCount * // only actual varible that is added as part of the method\r\n      (((96 * 7) + (13 * monthDays)) *\r\n        (43 +\r\n          (10 * this.settings.avNumDsOneVm) +  //data.avNumDsOneVm\r\n          // (5 * this.settings.avNicsHost) +\r\n          (6 * this.settings.avNumVDisksVm)) +\r\n        ((48 * 7) + (2 * monthDays)) *\r\n          (2 * (this.settings.avNumDsOneVm + this.settings.avNumGDiskVm))) * //data.avNumGDiskVm\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvVmSize(data: HvVmSizeInter): number {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      data.hvVmCount *\r\n      ((288 * 7 + 13 * monthDays) *\r\n        (20 + 8 * 3 * data.haAvNumVdVm + 3 * data.hvAvNumNicsVm) +\r\n        (48 * 7 + 2 * monthDays) * (2 + 2 * data.haAvNumVdVm) +\r\n        (48 * 7 + 4 * monthDays) * (2 * data.hvAvNumGdVm)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // Using in the VeeamOne.ts\r\n  vmSizet() {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const vmCount = this.settings.vmQty; // changed the name so it doesn't break\r\n    const result =\r\n      vmCount *\r\n      ((288 * 7 + 13 * monthDays) *\r\n        (47 +\r\n          13 * this.settings.avNumDsOneVm +\r\n          5 * this.settings.avNicsHost +\r\n          6 * this.settings.avNumDsOneVm) +\r\n        (48 * 7 + 2 * monthDays) *\r\n          (2 * (this.settings.avNumDsOneVm + this.settings.avNumGDiskVm))) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvVmSizet(data: HvVmSizeInter) {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      data.hvVmCount *\r\n      ((288 * 7 + 13 * monthDays) *\r\n        (28 + 8 * 3 * data.haAvNumVdVm + 9 * data.haAvNumVdVm) +\r\n        (48 * 7 + 2 * monthDays) *\r\n          (2 + 2 * data.haAvNumVdVm) +\r\n        (48 * 7 + 4 * monthDays) *\r\n          (2 * data.hvAvNumGdVm)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n\r\nexport {VmSizeInter, HvVmSizeInter, VmSizeCal}","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport { InfraSettings } from './Settings';\r\n\r\nexport interface DatastoreSizeInter extends General {\r\n  datastores: number; // Datastores\r\n}\r\n\r\nexport class DataStoreSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  datastoreSize(): number { // data: DatastoreSizeInter\r\n\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const result =\r\n      this.settings.datastoreQty * // calculated value, was data.datastores\r\n      ((96 * 7 + 13 * monthDays) * 10 + (48 * 7 + 2 * monthDays) * 2) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  datastoreSizet() {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const result =\r\n      this.settings.datastoreQty *\r\n      ((288 * 7 + 13 * monthDays) * 10 +\r\n        (48 * 7 + 2 * monthDays) * 2) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport { InfraSettings } from './Settings';\r\n\r\nexport interface HostSizeInter extends General {\r\n  hosts: number; // Hosts\r\n  datastores: number; // Datastores\r\n  avNicsHost: number; // Average number of NICs per Host\r\n  avVswitchHost: number;\r\n  avSdPerHost: number; // Average number of Storage Adapter per Host\r\n  avSpPerHost: number; // Average number of Storage Path per Host\r\n}\r\n\r\nexport interface HvHostSizeInter extends General {\r\n  hvHosts: number; // Hosts\r\n  hvAvNumVol: number; // Average number of volumes per Host\r\n  hvAvNumNics: number; // Average number of NICs per Host\r\n  avVswitchHost: number; // Average number of Virtual Switch per Host\r\n}\r\n\r\nexport class HostSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings){\r\n    this.settings = settings;\r\n  }\r\n\r\n  // Advanced\r\n  hostSize(): number { // data: HostSizeInter\r\n\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const result =\r\n      this.settings.hostQty * // calculated property\r\n      (288 * 7 + 13 * monthDays) *\r\n      (49 +\r\n        (12 * this.settings.datastoreQty) / this.settings.hostQty +\r\n        9 * this.settings.avNicsHost +\r\n        6 * (this.settings.avSdPerHost + this.settings.avSpPerHost)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n  // will probably delete\r\n  hvHosts(data: HvHostSizeInter): number {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      data.hvHosts *\r\n      (96 * 7 + 13 * monthDays) *\r\n      (24 + 6 * data.hvAvNumVol + 5 * data.hvAvNumNics) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // Typical\r\n  hostSizet() {\r\n    const result =\r\n      this.settings.hostQty *\r\n      (288 * 7 + 13 * (30.44 * this.settings.historicPerfData)) *\r\n      (55 +\r\n        (12 * this.settings.datastoreQty) / this.settings.hostQty +\r\n        11 * this.settings.avNicsHost +\r\n        7 * (this.settings.avSdPerHost + this.settings.avSpPerHost)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvHostst(data: HvHostSizeInter) {\r\n    const result =\r\n      data.hvHosts *\r\n      (288 * 7 + 13 * (30.44 * data.historicPerfData)) *\r\n      (46 +\r\n        6 * data.hvAvNumVol +\r\n        10 * data.hvAvNumNics +\r\n        6 * data.avVswitchHost) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport { InfraSettings } from './Settings';\r\n\r\ninterface OtherDataInter extends General {\r\n  resourcePool: number; // Resource Pools\r\n  vapp: number; // vApps\r\n  clusters: number;\r\n}\r\n\r\ninterface VhOtherDataInter extends General {\r\n  hvHosts: number;\r\n  historicPerfData: number;\r\n  hvAvNumVol: number;\r\n  hvAvNumNics: number;\r\n  avVswitchHost: number;\r\n  unknownParam: number;\r\n  hvNumCsv?: number;\r\n}\r\n\r\nexport class OtherDataSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  otherData(): number {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n\r\n    const result =\r\n      ((this.settings.resourcePoolQty + this.settings.vappQty) * (288 * 7 + 13 * monthDays) * 24 +\r\n        this.settings.resourcePoolQty * (288 * 7 + 13 * monthDays) * 27) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvOtherData(data: General) {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      (5 * ((96 * 7 + 13 * monthDays) * 2 + (48 * 7 + 3 * monthDays) * 1) +\r\n        this.unknown.unknownParam *\r\n          ((96 * 7 + 13 * monthDays) * 2 + (48 * 7 + 3 * monthDays) * 1)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // has clusters which the other don't\r\n  otherDatat(): number {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n\r\n    const result =\r\n      ((this.settings.resourcePoolQty + this.settings.vappQty) * (288 * 7 + 13 * monthDays) * 46 +\r\n        this.settings.clusterQty * (288 * 7 + 13 * monthDays) * 56) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // different interface to the advanced version\r\n  hvOtherDatat(data: VhOtherDataInter) {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      (5 * ((288 * 7 + 13 * monthDays) * 7 + (48 * 7 + 3 * monthDays) * 3) +\r\n        (data.hvNumCsv as number) *\r\n          ((288 * 7 + 13 * monthDays) * (18 + 2) +\r\n            (48 * 7 + 3 * monthDays) * 3)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { PerfSizeInter } from './PerformanceSize';\r\nimport { VbrCal } from './VbrCal';\r\nimport { InfraSettings } from './Settings';\r\n\r\ninterface EventsDataInter extends General {\r\n  vmCount: number; // VMs\r\n  hosts: number; // Hosts\r\n  eventsData: number; // Period of time for keeping events data\r\n}\r\n\r\ninterface EventsVmwareInter extends EventsDataInter {\r\n  datastores: number; // Datastores\r\n  clusters: number; // Clusters\r\n  vapp: number; // vApps\r\n}\r\n\r\n\r\n\r\nexport class EventsDataCal {\r\n\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  eventsData(): number {\r\n    const vmCount = this.settings.vmQty;\r\n    const result =\r\n      ((vmCount * 28.6 +\r\n        this.settings.hostQty * 765.8 +\r\n        this.settings.datastoreQty * 7.3 +\r\n        this.settings.clusterQty * 6.2 +\r\n        this.settings.vappQty * 0.1) *\r\n        (30.44 * this.settings.eventsHistory)) /   // data.eventsData\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n\r\n  hvEventsData(data: EventsDataInter) {\r\n    const result =\r\n      ((data.vmCount * 0.1 + data.hosts * 527.2) * (30.44 * this.settings.eventsHistory)) / // data.eventsData\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n  \r\n}\r\n","import { Unknown } from './UnknownParam';\r\nimport { VbrCal } from './VbrCal';\r\nimport { VeeamSettings } from './Settings';\r\n\r\n// export interface PerfSizeInter {\r\n//   vmQty: number;\r\n//   vbrNumVbrEm: number; // Veeam Backup & Replication Enterprise Manager\r\n//   vbrServers: number; // Veeam Backup & Replication servers\r\n//   historicPerfData: number; // Period of time for keeping historical performance and backup data\r\n//   vbrAvNumRepo: number; // Average number of Repositories  per VBR\r\n//   vbrAvNumProxy: number; // Average number of Proxy  per VBR\r\n//   vbrAvNumWan: number; // Average number of WAN Accelerators  per VBR\r\n//   vbrAvJobsServer: number; // Average number of Jobs per backup server\r\n// }\r\n\r\nexport interface PerfSizeInter {\r\n  vmQty: number;\r\n  historicPerfData: number; // Period of time for keeping historical performance and backup data\r\n}\r\n\r\nexport class PerformanceSize {\r\n  private unknown = new Unknown();\r\n\r\n  private vbrSettings: VeeamSettings;\r\n\r\n  constructor(veeamSettings: VeeamSettings) {\r\n    this.vbrSettings = veeamSettings;\r\n  }\r\n\r\n  vbrPerf(): number {\r\n    const monthDays = 30.44 * this.vbrSettings.historicPerfData;\r\n    const timeVar1 = 96 * 7 + 13 * monthDays; // 96 hours? * 7 * 13 * monthDays\r\n    const timeVar2 = 96 * 7 + 25 * monthDays; // 4\r\n    const timeVar3 = 24 * 7 + 2 * monthDays; // hours in 2 x historic years?\r\n    const result =\r\n      ((this.vbrSettings.entermanQty + this.vbrSettings.vbrServers) *\r\n        timeVar1 *\r\n        12 +\r\n        this.vbrSettings.vbrAvNumRepo *\r\n          this.vbrSettings.vbrServers *\r\n          ((timeVar1 + timeVar2 + timeVar3) * 2) + // Repos * vbrServers\r\n        this.vbrSettings.vbrAvNumProxy *\r\n          this.vbrSettings.vbrServers *\r\n          ((timeVar1 + timeVar2) * 3) + // Proxies * vbrServers\r\n        this.vbrSettings.vbrAvNumWan *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          11 + // WAN Acc * vbrServers\r\n        this.vbrSettings.vbrAvJobsServer *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          2 + // Jobs * vbrServers\r\n        timeVar2 * (4 + 184 * this.vbrSettings.vbrServers)) * // additional value\r\n      this.unknown.unknownParamExtended; // Unknown param\r\n    return result;\r\n  }\r\n\r\n  vbrPerft() {\r\n    const monthDays = 30.44 * this.vbrSettings.historicPerfData;\r\n    const timeVar1 = 96 * 7 + 13 * monthDays; // 96 hours? * 7 * 13 * monthDays\r\n    const timeVar2 = 96 * 7 + 25 * monthDays; // 4\r\n    const result =\r\n      ((this.vbrSettings.entermanQty + this.vbrSettings.vbrServers) *\r\n        timeVar1 *\r\n        12 +\r\n        this.vbrSettings.vbrAvNumRepo *\r\n          this.vbrSettings.vbrServers *\r\n          (timeVar1 * 14 + timeVar2 * 1 + (168 + 2 * monthDays) * 2) +\r\n        this.vbrSettings.vbrAvNumProxy *\r\n          this.vbrSettings.vbrServers *\r\n          (timeVar1 * 15 + timeVar2 * 3) +\r\n        this.vbrSettings.vbrAvNumWan *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          14 +\r\n        this.vbrSettings.vbrAvJobsServer *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          2 +\r\n        (168 + 25 * monthDays) *\r\n          (4 +\r\n            4 *\r\n              this.vbrSettings.vbrAvJobsServer *\r\n              this.vbrSettings.vbrServers)) *\r\n      this.unknown.unknownParamExtended; // Unknown param\r\n    return result;\r\n  }\r\n}\r\n","import {VeeamSettings} from './Settings';\r\n\r\ninterface VbrEventsInter {\r\n    vbrNumVbrEm: number; // Veeam Backup & Replication Enterprise Manager\r\n    vbrServers: number; // Veeam Backup & Replication servers\r\n    vbrAvNumRepo: number; // Average number of Repositories  per VBR\r\n    vbrAvNumProxy: number; // Average number of Proxy  per VBR\r\n    vbrAvNumWan: number; // Average number of WAN Accelerators  per VBR\r\n    eventsData: number; // Period of time for keeping events data\r\n  }\r\n\r\nexport class VbrEventsCal {\r\n  private settings: VeeamSettings;\r\n\r\n  constructor(settings: VeeamSettings){\r\n    this.settings = settings;\r\n  }\r\n\r\n  vbrEvents() {\r\n    const result =\r\n      ((this.settings.entermanQty * 0.47 + //data.vbrNumVbrEn\r\n        this.settings.vbrServers * 1963 +\r\n        this.settings.vbrAvNumRepo * this.settings.vbrServers * 0.18 +\r\n        this.settings.vbrAvNumProxy * this.settings.vbrServers * 0.37 +\r\n        this.settings.vbrAvNumWan * this.settings.vbrServers * 0.55) *\r\n        (30.44 * this.settings.eventsHistory)) /\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n\r\n  // Same as advanced\r\n  // vbrEventst(data: VbrEventsInter) {\r\n  //   return this.vbrEvents(data);\r\n  // }\r\n}\r\n","import { VbrCal } from './VbrCal';\r\nimport { VeeamSettings } from './Settings';\r\n\r\ninterface VbrDbTimeInter {\r\n  vmQty: number; // added\r\n  historicPerfData: number;\r\n}\r\n\r\nexport class VbrDbTime {\r\n  private settings: VeeamSettings;\r\n\r\n  constructor(settings: VeeamSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  vbrDb() {\r\n    const result =\r\n      ((this.settings.historicPerfData / 12) *\r\n        this.settings.vbrServers *\r\n        this.settings.vbrAvJobsServer *\r\n        (365 * 2179 +\r\n          365 * 1436 * this.settings.vbrAvJobsServer +\r\n          366 * 3262 * this.settings.vbrRestore)) /\r\n      1024 /\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n}\r\n","// Main interface for the app\r\n\r\nimport {\r\n  General,\r\n  HostSizeInter,\r\n  HvHostSizeInter,\r\n  DatastoreSizeInter,\r\n  OtherDataInter,\r\n  EventsDataInter,\r\n  HvEventsDataInter,\r\n} from './Interfaces';\r\n\r\nimport { InfraSettings, VeeamSettings } from './Settings'\r\n\r\nimport {VmSizeInter, HvVmSizeInter, VmSizeCal} from './VmSize';\r\nimport { DataStoreSizeCal } from './DatastoreSize';\r\nimport { HostSizeCal } from './HostSize';\r\nimport { OtherDataSizeCal} from './OtherDataSize';\r\nimport { EventsDataCal } from './EventsData';\r\nimport { PerformanceSize } from './PerformanceSize';\r\nimport { VbrEventsCal } from './VbrEvents';\r\nimport { VbrDbTime } from './VbrDbTime';\r\n\r\ninterface formData {\r\n\r\n}\r\n\r\n\r\ndocument.getElementById('simpleNextBtn')?.addEventListener('click', ()=> {\r\n  const vmQty = (document.getElementById('vmQty') as HTMLInputElement).value;\r\n  const hostQty = (document.getElementById('hostQty') as HTMLInputElement).value;\r\n\r\n  // create new instance of the Requiremets class below\r\n  const requirements = new Requirements();\r\n\r\n  // Check if the advanced is checked\r\n  if((document.getElementById('advancedMode') as HTMLInputElement).checked) {\r\n    // Updates the settings for the hypervisor which calculates the requirements based on ratios\r\n    // see the Settings.TS file\r\n    requirements.settings.updateQty(parseInt(vmQty), parseInt(hostQty));\r\n\r\n    // Get the updated settings and output the results into the second form group\r\n    const settings = requirements.settings.getSettings();\r\n    (document.getElementById('advScaleThresh') as HTMLInputElement).value = settings.vmThreashold.toString();\r\n    (document.getElementById('avNumVDisksVm') as HTMLInputElement).value = settings.avNumVDisksVm.toString();\r\n    (document.getElementById('clusterQty') as HTMLInputElement).value = settings.clusterQty.toString();\r\n    (document.getElementById('avNumGDiskVm') as HTMLInputElement).value = settings.avNumGDiskVm.toString();\r\n    (document.getElementById('avNicsHost') as HTMLInputElement).value = settings.avNicsHost.toString();\r\n    (document.getElementById('historicPerfData') as HTMLInputElement).value = settings.historicPerfData.toString();\r\n    (document.getElementById('avSdPerHost') as HTMLInputElement).value = settings.avSdPerHost.toString();\r\n    (document.getElementById('eventsHistory') as HTMLInputElement).value = settings.eventsHistory.toString();\r\n    (document.getElementById('vappQty') as HTMLInputElement).value = settings.vappQty.toString(); \r\n    (document.getElementById('datastoreQty') as HTMLInputElement).value = settings.datastoreQty.toString();\r\n  } else {\r\n\r\n    // If advanced isn't selected the run the calculation using the ratios only\r\n    requirements.runCal(parseInt(vmQty), parseInt(hostQty));\r\n    const r = requirements;\r\n    const totalCap = r.vmCap + r.hostCap + r.dataStoreCap + r.eventsData + r.vbrPerfData + r.vbrEventsData + r.vbrDbTimeData;\r\n    (document.getElementById('vmDataGB') as HTMLInputElement).innerHTML = r.vmCap.toFixed(2);\r\n    (document.getElementById('hostDataGB') as HTMLInputElement).innerHTML = r.hostCap.toFixed(2);\r\n    (document.getElementById('dataStoreGB') as HTMLInputElement).innerHTML = r.dataStoreCap.toFixed(2);\r\n    (document.getElementById('eventGB') as HTMLInputElement).innerHTML = r.eventsData.toFixed(2);\r\n    (document.getElementById('vbrperfGB') as HTMLInputElement).innerHTML = r.vbrPerfData.toFixed(2);\r\n    (document.getElementById('vbrEventGB') as HTMLInputElement).innerHTML = r.vbrEventsData.toFixed(2);\r\n    (document.getElementById('vbrJobGB') as HTMLInputElement).innerHTML = r.vbrDbTimeData.toFixed(2);\r\n    (document.getElementById('totalCap') as HTMLInputElement).innerHTML = totalCap.toFixed(2);\r\n  }\r\n})\r\n\r\n// \r\ndocument.getElementById('advancedNextBtn')?.addEventListener('click', ()=> {\r\n  // Create a new instances of the Requirements class\r\n  const requiremets = new Requirements();\r\n\r\n  // Grab the updated elements from the form\r\n  const vmQty = parseInt((document.getElementById('vmQty') as HTMLInputElement).value);\r\n  const hostQty = parseInt((document.getElementById('hostQty') as HTMLInputElement).value);\r\n  const clusterQty = parseInt((document.getElementById('clusterQty') as HTMLInputElement).value);\r\n  const avNumVDisksVm = parseInt((document.getElementById('avNumVDisksVm') as HTMLInputElement).value);\r\n  const avNumGDiskVm = parseInt((document.getElementById('avNumGDiskVm') as HTMLInputElement).value);\r\n  const avNicsHost = parseInt((document.getElementById('avNicsHost') as HTMLInputElement).value);\r\n  const historicPerfData = parseInt((document.getElementById('historicPerfData') as HTMLInputElement).value);\r\n  const avSdPerHost = parseInt((document.getElementById('avSdPerHost') as HTMLInputElement).value);\r\n  const eventsHistory = parseInt((document.getElementById('eventsHistory') as HTMLInputElement).value);\r\n  const vappQty = parseInt((document.getElementById('vappQty') as HTMLInputElement).value);\r\n  const datastoreQty = parseInt((document.getElementById('datastoreQty') as HTMLInputElement).value);\r\n\r\n  // Create a new single object with the form data\r\n  const data = {\r\n    vmQty,\r\n    hostQty,\r\n    clusterQty,\r\n    avNumVDisksVm,\r\n    avNumGDiskVm,\r\n    avNicsHost,\r\n    historicPerfData,\r\n    avSdPerHost,\r\n    eventsHistory,\r\n    vappQty,\r\n    datastoreQty\r\n  }\r\n  // update the settings which uses a \"set\"\r\n  requiremets.settings.updateSettings = data;\r\n\r\n  // Update the veeam settings with the timescales which are the only variable\r\n  // All other settings are caculated from the VM Quantity\r\n  requiremets.veeamSettings.updateSettings(historicPerfData, eventsHistory);\r\n\r\n  // Now run the calculation based on the new settings\r\n  requiremets.runCal(vmQty, hostQty);\r\n\r\n  // Output the final results to the DOM\r\n  const r = requiremets;\r\n  const totalCap = r.vmCap + r.hostCap + r.dataStoreCap + r.eventsData + r.vbrPerfData + r.vbrEventsData + r.vbrDbTimeData;\r\n  (document.getElementById('vmDataGB') as HTMLInputElement).innerHTML = r.vmCap.toFixed(2);\r\n  (document.getElementById('hostDataGB') as HTMLInputElement).innerHTML = r.hostCap.toFixed(2);\r\n  (document.getElementById('dataStoreGB') as HTMLInputElement).innerHTML = r.dataStoreCap.toFixed(2);\r\n  (document.getElementById('otherStoreGB') as HTMLInputElement).innerHTML = r.otherData.toFixed(2);\r\n  (document.getElementById('eventGB') as HTMLInputElement).innerHTML = r.eventsData.toFixed(2);\r\n  (document.getElementById('vbrperfGB') as HTMLInputElement).innerHTML = r.vbrPerfData.toFixed(2);\r\n  (document.getElementById('vbrEventGB') as HTMLInputElement).innerHTML = r.vbrEventsData.toFixed(2);\r\n  (document.getElementById('vbrJobGB') as HTMLInputElement).innerHTML = r.vbrDbTimeData.toFixed(2);\r\n  (document.getElementById('totalCap') as HTMLInputElement).innerHTML = totalCap.toFixed(2);\r\n})\r\n\r\nclass Requirements {\r\n  vmCap = 0;\r\n  hostCap = 0;\r\n  dataStoreCap = 0;\r\n  otherData = 0;\r\n  eventsData = 0;\r\n  vbrPerfData = 0;\r\n  vbrEventsData = 0;\r\n  vbrDbTimeData = 0;\r\n\r\n  settings = new InfraSettings()\r\n  veeamSettings = new VeeamSettings()\r\n\r\n  // update the Infra settings- used with advanced only\r\n  updateInfraSettings(settings: InfraSettings){\r\n    settings.updateSettings = settings;\r\n  }\r\n\r\n  // update the Veeam settings - used with advanced only\r\n  updateVeeamSettings(historicPerfData: number, eventsHistory: number){\r\n    this.veeamSettings.updateSettings(historicPerfData, eventsHistory)\r\n  }\r\n\r\n  runCal(vmCount: number, hosts: number){\r\n    this.settings.updateQty(vmCount, hosts);\r\n    this.veeamSettings.updateQty(vmCount);\r\n\r\n    console.log(\r\n      `\r\n      vbr servers: ${this.veeamSettings.vbrServers}\r\n      Proxies: ${this.veeamSettings.vbrAvNumProxy}\r\n      Repos: ${this.veeamSettings.vbrAvNumRepo},\r\n      Jobs: ${this.veeamSettings.vbrAvJobsServer},\r\n      Restore: ${this.veeamSettings.vbrRestore},\r\n      `\r\n    )\r\n\r\n    const vmSizeCapCal = new VmSizeCal(this.settings);\r\n    const hostSizeCal = new HostSizeCal(this.settings);\r\n    const datastoreSizeCal = new DataStoreSizeCal(this.settings);\r\n    const otherDataSizeCal = new OtherDataSizeCal(this.settings);\r\n    const eventsDataSizeCal = new EventsDataCal(this.settings);\r\n    const vbrPerfDataSizeCal = new PerformanceSize(this.veeamSettings);\r\n    const vbrEventsDataSizeCal = new VbrEventsCal(this.veeamSettings);\r\n    const vbrDbTimeSizeCal = new VbrDbTime(this.veeamSettings);\r\n\r\n    // check the threashold then run typical or advanced\r\n    if(vmCount < this.settings.vmThreashold){\r\n      // Advanced\r\n      this.vmCap = vmSizeCapCal.vmSizet();\r\n      this.hostCap = hostSizeCal.hostSizet();\r\n      this.dataStoreCap = datastoreSizeCal.datastoreSizet();\r\n      this.otherData = otherDataSizeCal.otherDatat();\r\n      this.eventsData = eventsDataSizeCal.eventsData(); // same for both\r\n      this.vbrPerfData = vbrPerfDataSizeCal.vbrPerft();\r\n      this.vbrEventsData = vbrEventsDataSizeCal.vbrEvents();\r\n      this.vbrDbTimeData = vbrDbTimeSizeCal.vbrDb();\r\n    } else {\r\n      // Typical\r\n      this.vmCap = vmSizeCapCal.vmSize();\r\n      this.hostCap = hostSizeCal.hostSize();\r\n      this.dataStoreCap = datastoreSizeCal.datastoreSize();\r\n      this.otherData = otherDataSizeCal.otherData();\r\n      this.eventsData = eventsDataSizeCal.eventsData();\r\n      this.vbrPerfData = vbrPerfDataSizeCal.vbrPerf();\r\n      this.vbrEventsData = vbrEventsDataSizeCal.vbrEvents();\r\n      this.vbrDbTimeData = vbrDbTimeSizeCal.vbrDb();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}
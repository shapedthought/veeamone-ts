{"version":3,"sources":["src/Settings.ts","src/UnknownParam.ts","src/VmSize.ts","src/DatastoreSize.ts","src/HostSize.ts","src/OtherDataSize.ts","src/EventsData.ts","src/PerformanceSize.ts","src/VbrEvents.ts","src/VbrDbTime.ts","src/index.ts"],"names":[],"mappings":"cUAA;;;;;;;APCA,AGkBA,AFlBA,ACAA,AEDA,AP6BA,AC7BA,AQQA,ADGA,ANVA,ICAA,AGkBA,AFlBA,ACAA,AEDA,AP6BA,AC7BA,AQQA,ADGA,ANVA,ODDA,EQQA,GDGA,CFQA,ANUA,CG5BA,ACAA,ACAA,AEDA,ALCA,GCAA,ACAA,ACAA,AEDA,ALCA,OCAA,ACAA,ACAA,AEDA,ALCA,CCAA,ACAA,ACAA,AEDA,ALCA,gBCAA,ACAA,ACAA,AEDA,ALCA,CCAA,ACAA,ACAA,AEDA,ALCA,EAmBA;AIDA,ANUA,AC7BA,AQQA,ADGA,AECA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;APJA,AGWA,AFCA,ACAA,AEAA,APSA,AC7BA,AQQA,ADGA,ILHA,ACYA,ACAA,AEAA,QDDA,ANUA,AC7BA,AQQA,ADGA,GJSA,IGAA,CJZA,AEYA;AFZA,AGeE,AFHF,ACAA,AEAA,APSA,ACzBE,AQOA,ADGA,ANOF,AQPA,IROA,AQPA,OJSE,ANMF,ACzBE,AQOA,ADGA,CEAF,CROA,EQPA,GTVE,EQOA,CRPA,AQOY,CCGd,CFAE,AEAF,CJSE,ANMF,AQfc,CFSA,ENMd,ESlBE,EAAmC,CDGnC,CFSA,AITF,CFAqC,AEArC,CJSqC;AHfrC,AGgBI,AFJJ,ACAA,AEAA,APUE,AC7BA,AQWE,ADGA,ANMJ,SIGS,ALvBP,AQWO,ADGA,GLPT,ACYA,ACAA,AEAA,KDII,AGZA,ADGA,GFSgB,AGZA,ADGA,CPdlB,GAAe,IKuBb,AGZA,ADGA,aPdF;AEWA,AGaC,AFDD,ACAA,AECA,APMQ,AC1BN,AQQD,ADGA,ANKH,AQNA,IAAA,KVgBU,AC1BD,EEOP,ACYA,ACAA,AECA,CLJF,OQNA,GNSE,AMTF,CNSc,AJOJ,GONR,APMyB,CGnBzB,AEYA,AECY,CJbA,AEYA,ALOJ,CAFV,ACxBI,ASUJ,CVgB+B,AUhB/B,CNSE,CHnB8B,CGmBK,GDZnC,AEYA,EFZmC,AEYA,EECnC,EAAwC,KGV1C,CAAA,ITVoD,IAApB,GAA2B,IAAvD;AEIM,ACYA,ACAA,AEAA,APWR,AC1BC,ACmBD,SChBQ,ACYA,ACAA,AEAA,ELIR,KChBQ,ACYA,ACAA,AEAA,GJZU,ACYA,ACAA,AEAA,CLIlB,CAAY,EChBU,ACYA,ACAA,AEAA,MLItB,EAAmC,MChBb,ACYA,ACAA,AEAA,CJZA,ACYA,ACAA,AEAA,OJZJ,ACYA,ACAA,AEAA,EJZV,ACYA,ACAA,AEAA;AJRN,AGcF,AFFE,ACAA,AECA,AEXF,ADGA,ANIQ,AQNV,EJWE,AGZA,ADGA,EEFF,KPHS,ACYA,ACAA,AECA,ALJC,EOPR,CAAA,EDGA,AEFF,CJWE,AETA,CFSA,AJLQ,CCTN,ACYA,ACAA,AKTJ,ERMoB,CCTA,ACYA,ACAA,AEChB,CEXF,CAAA,CFWqB,ALJC,CMJtB,AEFF,CJWE,AETA,AEFF,CJWE,CGZA,CNFE,ACYA,ACAA,EIVF,IDGA,EFSA,ACDE,CCRF,ANIsB,AQNxB,CRMwB,AQNxB,CJWE,GGZA,GPOkB,EAAV,EMJR,EFSA;AHbC,AGcC,AFFD,ACAA,AECA,APMO,AC1BV,AQSI,ADGA,ANOA,GENJ,CAQE,IEAQ,AGZA,ADGA,CRcA,AC1BV,ACmBS,KOVO,ADGA,CFSC,CLrBjB,CQUQ,ADGD,ANMH,CIEgB,AERZ,CRaE,CEPU,EFOG,AShBV,CHWY,AERZ,CRaH,CAJV,CAI2B,EEPvB,EOTI,CHWY,AGXE,ADGd,CFQ0B,AERZ,KFQlB,MERI,GAA4B,CCH5B,GAAiC,ADGjC,ECHD,CDGoC,ECFnC,KAAK,QAAL,CAAc,UADf,GAEC,KAAK,QAAL,CAAc,eAFf,IAGE,MAAM,IAAN,GACC,MAAM,IAAN,GAAa,KAAK,QAAL,CAAc,eAD5B,GAEC,MAAM,IAAN,GAAa,KAAK,QAAL,CAAc,UAL9B,CAAD,GAMA,IANA,GAOA,IAPA,GAQA,IATF;AHaA,AL7BJ,AQ0BI,ADLI,ANML,AQVH,CTjBA,EAAA,CSiBA,IJYU,CERG,ECKF,GHGK,GACT,AGJH,ADLI,CFSA,AETc,CEJtB,GAAA,GJae,GAAG,AETV,CEJR,CAAA,CFImC,CFS3B,GACA,AEXA,GAEA,EFSK,GETA,IELb,CJcQ,AIdR,CJcsB,EETd,CAAc,IFSd,GAAwB,KADxB,AERA,GFUA,AEV6B,KFUxB,AEV6B,QFUlC,AEV6B,CFUf,AEV6B,UAA3C,EFUA,CEVwD,EFU3B,EEZ7B,CFUA,EEPA,CFUA,IEVK,CFUA,OEVL,CFUA,AEVc,CFUA,UAAd,EEVA,CFU2B,EEVG,CFO9B,GAIA,CEXmC,IFW9B,IEXyB,CAAc,GFW5C,CAAc,MEXd,CFWA,EEXyD,CFWjC,GAJzB,AEVC,GAIA,EFWC,GEXI,KFWI,GEXT,CAAc,CFWA,QAAL,CAAc,CEXvB,GAA4B,KAAK,IFMlC,CAAD,GAK6C,AEXf,CAAc,UAA1C,GAAuD,IAJxD,KAKE,QAAQ,KAAK,QAAL,CAAc,aALxB,CAAD,GAMA,IANA,GAOA,IARF;ALHF,AGoBI,ADRJ,AECA,APKQ,ASPP,ADCC,ELZF,AEYA,AECA,CEdA,KHeI,CNII,EMGJ,AETK,IFCP,ECAF,ACDE,CLZF,AEYA,AECA,CJbA,AEYA,ELMQ,GAAe,CAAf,CALV,COAE,APK0B,CGlB1B,AEYA,AECA,CJbA,AEYA,MECA,GFDA,AECA,GFDA,CFZA,GAAA,KIaA,GFDA,IFZA;AAEE,AGoBA,AFTF,ACAE,AECA,AN9BS,AO6BV,ANAD,AQXF,ENWE,AFAA,CMXA,CEAF,GTlBa,CEkBH,AEWA,AECA,AN9BG,GKsCF,AJTT,CAAA,CEAA,CAAA,CH7BW,CSkBb,CPAmB,AGoBf,ADTe,AECA,CN9BN,CSkBb,CPAsB,AEWA,AECA,CLDpB,CAAA,CEAA,CAAA,CH7BW,CSkBb,CAAA,CPA8B,AEWA,AECA,ALD5B,GAAA,CEAA,CDXiC,AEWA,AECA,EHDjC,MDX4B,AEWA,AKX9B,CPA4C,AEWA,AKX5C,CRWE,CKC4B,CAAiB,EHD7C,WDXE,AEWA,GECA;AJXA,AGoBD,AFRC,ACAA,AEAA,APIM,ASPV,APEI,GIHF,KHRQ,ACYA,ACAA,AEAA,ALDA,CFKA,ASPV,KNTgB,AEYA,EEAE,CJXZ,ACWa,ACCb,AHFa,CGEZ,ALGG,ASPV,CJIQ,AEDa,CHAC,AFDA,CFKA,CGfX,AHeD,CANV,CKGa,AEDa,APID,COJJ,GHAS,AGAA,ALDA,ECVxB,CAAc,CEYZ,CDD2B,ACCb,AEDa,ALDA,QECL,AFDA,CECc,AGAxC,ALDwC,CCVtC,AISJ,CAE4C,IJXX,AEY3B,GAAgC,KAAK,EDDzC,AFDA,CADF,CAC4D,IGEtB,CAAc,OAA/C,KAA2D,MAAM,CAAN,GAAU,KAAK,SAA1E,IAAuF,EAAvF,GACC,KAAK,QAAL,CAAc,eAAd,IAAiC,MAAM,CAAN,GAAU,KAAK,SAAhD,IAA6D,EAD/D,IAEA,KAAK,OAAL,CAAa,oBAHf;AFVG,ACWH,ACGA,ALEF,AS7BF,AD2BA,AEhBA,CDXA,EAAA,CCWA,CPEQ,GCWE,CIGV,CLda,CAAL,AEcG,GFdM,ACWD,GACV,ACEF,EFdkB,EKctB,AEhBA,CNcW,EMdX,IPEO,ECYD,CAAc,AMdpB,CPEmC,AOFnC,EPEO,GAAiC,CAAC,ACYnC,KDZwC,ACYhB,CDZW,GAAS,IAAI,AOFtD,CAAA,QPEwC,IAA2B,CAD7D,IAEA,KAAK,OAAL,CAAa,oBAHf;AAIA,AGkBF,AFPK,ACEJ,AEJC,ACrBJ,ANoBI,CMpBJ,CF8BE,CDbA,AGjBF,KDqBU,ALDA,EEGG,CDXF,ACWJ,GAAU,CEOf,AJVe,CIUf,ACTgB,CJTd,CDQgB,CEGE,AGFD,ILDI,CKCC,CDSxB,ACTmB,CDSnB,EFRI,AGDwB,GLDV,CAAc,CEI3B,AGH4B,ILD/B,CIUF,AFLO,AFPP,CAEuC,EIUvC,CCTE,CHIU,AGPZ,CAG4C,IHI3B,GEKJ,IAAb,CFLY,CEKsB,AFLR,YAApB,GAAoC,KAAK,QAAL,CAAc,OADnD,GAEC,IAAI,KAAK,QAAL,CAAc,UAFnB,GAGC,KAAK,KAAK,QAAL,CAAc,WAAd,GAA4B,KAAK,QAAL,CAAc,WAA/C,CALF,IAMA,KAAK,OAAL,CAAa,oBAPf;ADRD,AGkBC,AFFA,AJFF,AS9BW,ACYb,GPJE,COIF,GDZa,CHkCH,AGlCG,CT8BX,EIES,GEEK,CItBhB,EJuBO,AFHH,AKhCS,CHmCL,AIvBR,EDZa,CT8BX,CMKU,CAAC,CNLI,CAAf,AUlBF,CVSA,AUTA,CVkBoB,ES9BP,CHmCL,GAAe,GAAf,GAAqB,AIvB7B,CAAA,GJuBiC,CAAC,KAAL,GAAa,KAAnC,KAA6C,QAAQ,KAAK,QAAL,CAAc,aAAnE,CAAD,GAAsF;AACtF,AFHH,ACHD,AELE,ACtBS,ANqBT,EGMF,CDTA,CATF,CAsBE,EI/BW,CFgCP,ACVI,ACtBG,ANqBH,GIaJ,GJbU,CIUZ,CCTc,CLAZ,CGKJ,CAAA,AELmB,CCtBR,GAAA,CDsBa,ALAb,CKAQ,GFKnB,AEL4B,CFK5B,AHLc,GKAkB,GCtBrB,KH2BX,CELE,CAJF,CFSA,AEL2C,UFK/B,IAAZ,EAAyB;AFZzB,AGoBE,ADPA,ALAF,AELK,AQbP,EPKE,EOLF,CRaQ,GGKE,CLAR,CELW,CIYF,AJZH,GAAS,CQbjB,EJyBI,ADPe,CFbjB,AOLF,CPKE,AHaA,AELoB,CGKA,ELAP,CAAb,EUlBF,CAAA,EPKE,AEa4B,AHLvB,CCRL,GEagC,CAAC,AHJ1B,KACC,CQfV,CAAA,GPKE,ADUa,GCVb,EDUkB,CGGhB,OHHW,CAAc,CCV3B,WDSO,GACoC;ACTzC,AGoBD,ADPC,AENA,APMF,AEHQ,GIIR,KHdQ,AEaA,AENA,ALGI,CFGZ,IEHiB,CGGH,AENA,GJPG,AEcb,AENA,CFMC,AENA,CAAC,CJRc,CDUR,CFGZ,AEH0B,CGIhB,CAAC,AENA,CPKK,CAAhB,EGb4B,CEcZ,CAAL,EHNJ,CCR0B,AEcb,EENd,ALGE,CKHe,EFME,CHHb,ECXgB,CAAc,EDWzB,GGGP,AENJ,GAA+B,CFMC,CAA5B,AHHE,CAAc,EGGgB,AENA,CFMC,EFdzC,GEc8C,CAAL,GAAS,CENf,ALDhC,CKCiD,EFME,CHFlD,CAAC,KAAK,CKJP,ALIE,CGEmC,EHF1B,CKHV,CFK+D,CAAhE,CHFe,GGGd,EEPD,GFOM,AELL,CLEA,CKJD,GAGC,CLEG,CGEH,CAAa,EEJR,CLEG,KAAK,IGEb,CEJA,CAAiB,EFKd,AHHK,CGGJ,AHHkB,KGGb,CAAL,GAAS,AELb,GACE,ALCM,EGGU,CHHmB,EKD9B,GLCmC,GGGvC,IAA4B,CAA5B,AEJD,ALCmC,CKDlB,ALCgC,EGGhB,CAAC,KAAK,CAAL,CELpC,EFK6C,AHH1C,CADH,CKCG,ALPE,CKOD,ALPN,CGUmD,EHHoB,KKAzD,EFGuB,CEHpB,GFG+C,CAD9D,CADF,GEDM,CFIN,EEJ4B,GFIvB,KEJA,EFIL,CAAa,CEJ2B,CAFtC,CAHD,GAK4C,cFA/C;AFZA,ACeF,ACEE,AEJI,APAN,AEAI,AQbN,CAAA,CNeE,CMfF,GAAA,EPAU,CIaG,APAX,AEAS,EGIA,EDFT,CDfc,ACed,AMfM,CAAC,CRaH,CCZA,AEgBF,AHJe,GKAX,CAAiB,APAvB,CGZS,CCcT,CAAA,AJFe,CAAf,IUbF,CPCM,AODkB,CPCJ,ACclB,GAAA,AGFM,GACE,ALVN,KKUW,CJbT,CCcI,CMfV,CAAA,CPEO,CAAC,ACaN,EAA6B,EMfS,CHc9B,CJZI,AIYa,CJZnB,COFR,EPEkB,EOFsB,EAAA,CPEjB,CIWf,GGbgC,CHe7B,CAAC,GJbL,AOFiC,CAAxC,GPEoC,AOFI,CHepB,CJbb,EIagB,CJZf,AOHgC,CPG/B,AOHT,GAAwC,EPG1B,AOH0B,CPG/B,AIYE,AGf+B,GPGxB,CIYiB,CAF3B,CAND,CJJe,EIYkB,OJZhC,AOHgC,CAAmB,GPGxB,CAF7B,GODkC,CPIlC,COJ8D,IPIzD,OAAL,CAAa,AOJiD,oBPAhE;AAKA,AGgBJ,AFLI,ACED,AEFK,APFN,AEAE,AQbF,GLSA,CAlBF,CA4BE,CKnBM,ENeE,CEKV,ACLa,APFX,EGTS,ADSA,AQbE,GAAI,GPIb,ACWe,AFFf,GEEkB,AGAd,APFN,COEuB,CDKzB,AIpByB,CVaT,AUbU,CVaxB,IIE4B,IAAI,AGA1B,CHA2B,EGCzB,EGhBO,CAAwB,EHgB1B,KGhBE,EAAsD,ENenE,EGCM,CAAiB,AGhBzB,UHeM,GAEE,QAFF,GAGE,EAZH,GAYQ;AJbZ,AGfH,AF0BI,AGGI,APLN,AEAC,AQbD,CJXF,EHOE,AGPF,AJUE,GQCM,ENeE,CGGG,APLX,IUba,CNeC,EMfG,CNgBb,GGEE,APLN,CIGQ,AGEe,CHFd,CJHK,CAAd,AUbyB,CVD3B,AUC4B,CVaT,GIGb,IACC,GGCC,EHDI,CAAL,AGEG,AGnBS,CAAwB,ENiB3B,EGED,GHFM,EMjBF,EAAwD,IHmBjE,CHHJ,AGGqB,AGnBzB,CAFkE,CAIlE,GNgBK,KAAK,AGAJ,GAEE,CHFM,IAAI,CAAC,EGAb,GAGE,CAhBH,GAgBO,CHHP,GAA2B,IAAI,IAAI,CAAC,WAFrC,IAGA,KAAK,OAAL,CAAa,oBAJf;AAKA,AGEI,IAAA,OHFG,CGEK,IAAI,CHFhB,GGEoB,MAAM,KAAK,WAAL,CAAiB,UAA/B,CAjBV,IAiBwD;AJjB9D,AGhBa,AFgCV,ACFD,AEII,APTJ,AECA,AQZA,ELgBA,AHJA,CEFA,CAvBF,CAiCE,CMpBM,CJdK,CAAA,CHgBb,AIkBW,APTT,EECA,CAAA,IKQI,CAAa,CFJjB,AKhBkB,CLgBlB,EC9BW,AJ0BX,AQZqB,CRYrB,EI1BW,CHgBb,AHSE,AUXyB,GLgBzB,ALLmB,CKKnB,CLLA,AECA,GAAA,II1BW,ACeT,AGDmB,CHJrB,CFoBA,AEIuC,AGpBvC,CALkE,CAOlE,CLcA,CHJS,IAAT,EAA4B,KGI5B;AFzCF,AE0CI,ALLF,AECE,CCtCJ,EAAA,KE0CU,AHJA,CFDR,QKKiB,AHJA,GGIG,AHJA,EFDpB,GAAgB,EAAhB,CKK4B,ALrB9B,AEiB8B,CFC5B,GEDgC,CGIC,AHJA,QGIL,CAAc,OHJxC,SGIA;AAEA,AEEA,ALPA,AQXF,MAAI,ELgBI,AHLA,GKOC,GFFK,AHLA,AQXF,CAAC,ELiBT,AECF,ALNE,CGKC,CAAC,EHLE,CAAC,EGKE,KKjBP,CAAwB,CRYxB,CGKE,CAAc,EHJf,CAAC,MAAM,CAAN,EQbF,CRaY,CQbkD,CLiB5D,GAAgC,AHJjB,GQbrB,ELiB2C,AKjBgC,IRatE,IGIiC,CAAc,AHH7C,KAAK,EGGP,EHHW,CAAJ,EGGoD,CHH5C,IAAI,CGG8C,AHH7C,CGGuC,GAAU,KAAK,EHHxE,GAAgC,IGGlC,AHHsC,IGGiD,AHH7C,CAAC,CGG3C,GACC,KAAK,IHLN,IGKC,AHHA,CGGc,AHHb,KAAK,CAAL,GAAS,CGGV,GHHc,CGGc,MAAM,CAAN,CHH5B,EGGsC,GHHV,EGGe,EHHX,IAAI,GGGpC,CHHwC,CAAC,EGGe,EAD1D,IAEA,GHJE,CAFD,CGMI,EHHH,CAAC,IGGH,CAAa,AHHL,CAAL,GAAS,IAAI,SAAd,GGAJ,EHAgC,IAAI,IAAI,CAAC,WAArC,CAJF,IAKA,KAAK,OAAL,CAAa,oBANf;ACvCS,AC8CX,ACEE,AEDD,APPD,AEME,AQjBA,ENiBF,CGzBA,IJrBW,CAAA,CHwCX,EKQS,AHFA,EEAT,CAAA,GCEE,AHFA,IFNF,EIMA,CD9CW,AC8CX,AJNe,GGxCJ,CHwCX,KIMA,GAAA,OD9CW,KC8CX;AACE,ACED,ALRD,AEMC,AQjBC,GLWF,AHJA,CGzBF,AHCA,CGsCE,AHFA,GEFQ,CJNR,KIMc,AJNd,GIOI,AJPI,CAAR,IIOS,QAAL,CAAc,OAAd,IACC,MAAM,CAAN,GAAU,MAAM,QAAQ,KAAK,QAAL,CAAc,gBAA5B,CADX,KAEC,KACE,KAAK,KAAK,QAAL,CAAc,YAApB,GAAoC,KAAK,QAAL,CAAc,OADnD,GAEC,KAAK,KAAK,QAAL,CAAc,UAFpB,GAGC,KAAK,KAAK,QAAL,CAAc,WAAd,GAA4B,KAAK,QAAL,CAAc,WAA/C,CALF,IAMA,KAAK,OAAL,CAAa,oBAPf;AAQA,AGNF,APPA,AUXE,EHkBF,EGlBE,KVWF,EIaS,KJbT,AUXc,CNwBZ,AGNF,AGlBe,CHkBf,CPPU,CAAV,KUXE,CAAsB,CHkBxB,CAAA,OGlBE,CHkBF,AGlBkC,GHkBlC,KGlB0C,CAAC,KAAD,CHkB1C,AGlBE,EAAiD,QAAQ,CAAC,OAAD,CAAzD,EAHyE,CAKzE;ANuBD,AGNC,APPF,GIGA,KGIQ,CPPR,QOOiB,GAAG,IPPpB,GAAkB,COOU,APP5B,KOOiC,WAAL,CAAiB,gBAA3C;AFEF,AEDE,APPF,AEMA,AQhBE,ELkBF,AHFA,MKCQ,AGjBA,CVUR,EEMA,CAAA,IKCgB,AGjBA,ELkBhB,CAAA,AEDmB,APPnB,AUVmB,ERgBnB,CFNa,AEMb,CFNA,COOwB,CAAL,GFCnB,AED4B,CFC5B,AHFA,EQhB+B,CRgB/B,AQhBgC,CHiBC,OGjBd,CLkBnB,AKlByC,CHiBvC,CAFF,CFGA,AED4C,ALD5C,QQhBmB,ELkBN,AKlBX,ILkBF,EAAmC;ADMnC,ACLE,ALRF,AEME,AQhBC,ENuBH,EMvBG,ILkBK,AHFA,CFNR,GUVW,CNuBX,AMvBY,CNuBZ,EJbA,CKQiB,AHFA,EFNP,CKQU,ALRpB,AEMoB,GEOpB,CAAA,GMvBG,CLkByB,AHFA,AQhBD,INuB3B,ACLgC,CAAC,AHFA,EEOjC,MFP4B,CAAc,CQhBvC,ENuBM,AMvBwD,INuBjE,ACLE,CKlBC,CNuB2B,EMvB2C,KRgBvE,GQhB+E,CAAC,aAAT,CAAuB,OAAvB,CAA+B,CAA/B,CAAtE;ANwBD,ACLA,AEFA,APNF,AEME,AQhBC,IAAA,INuBK,ACLA,AEFA,ALAA,CFNR,GUVW,CAAC,CNuBE,ACLA,CHFC,CKAC,CHQZ,ACLA,CAAC,AHHa,CKAC,EHQX,AJdR,CIcS,CCLC,AHHa,CGGZ,AEHa,APNT,COMI,APNnB,EUVG,CHgByB,AGhBD,CNwBvB,CCLa,CAAN,AHHO,CAAc,CES3B,AGT4B,CFGZ,GHHnB,CAFF,CEWW,ACNe,AHHa,CESlC,AMzBF,EHgBD,AGhB4D,CNyB/C,AGZf,CAG4C,GGhBzC,CLmBO,CDMW,CMzBiD,ELmB/B,CAA7B,GAAiC,CDMd,ACNe,CKnBkC,CAAC,ENyB9C,CAAC,ACNe,CAAL,GAAS,GKnBiB,CLmBb,AKnBiC,OAApB,CNyBvD,AMzBmF,CNwB9F,ACLuC,AKnB2B,CAAnE,GLmBmE,CDOjE,ACPA,IACE,CDOD,GCPK,CDOD,ACPE,IDOE,CAAC,GCPR,IACE,CAAC,EDKL,GAEC,CCPU,CAAN,GDOC,ACPS,IDOL,CAAC,ACPS,SAAhB,EDKJ,GAGC,ACRiC,IDQ7B,CCRkC,CAAnC,EDQK,CAAC,CCPL,CAAC,KAAK,CAAL,GAAS,EDEhB,ECFoB,EDQpB,KAAK,ECRC,IAA2B,CDQjC,ACVG,CDUU,ACXb,IAIA,KAAK,OAAL,CAAa,GDAf,iBCLA;ADaA,ACPA,AL8BH,AUrDI,IAAA,ON8BM,ACPA,CKvBE,CAAC,IN8BV,ACPA,UKvBC,CAAwB,cAAxB,EAA6D,KAA7D,GAAqE,QAAQ,CAAC,YAAT,CAAsB,OAAtB,CAA8B,CAA9B,CAArE;AN+BF,ACPA,AERC,ALAA,AQfC,GNoBH,ACNA,CKdG,IHeK,ALAA,IQfG,CAAC,CHeE,ALAA,GKCV,ALAA,CKAC,CAAC,KAAK,ALAA,GQhBR,CRiBE,AQjBsB,CRiBrB,MKDA,ALCM,CKDW,ALCjB,GAAU,CQjBb,EAA2D,ERiBzC,GKD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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface settingsUpdateInter {\r\n  avNicsHost: number,\r\n  avNumVDisksVm: number,\r\n  avNumGDiskVm: number,\r\n  avSdPerHost: number,\r\n  historicPerfData: number,\r\n  eventsHistory: number,\r\n  vmQty: number,\r\n  hostQty: number,\r\n  clusterQty: number,\r\n  vappQty: number,\r\n  datastoreQty: number,\r\n}\r\n\r\ninterface returnSettings {\r\n  vmThreashold: number,\r\n  resourcePoolQty: number;\r\n  clusterQty: number;\r\n  vappQty: number;\r\n  datastoreQty: number;\r\n  avNicsHost: number;\r\n  avNumVDisksVm: number;\r\n  avNumGDiskVm: number;\r\n  avSdPerHost: number;\r\n  avSpPerHost: number;\r\n  historicPerfData: number;\r\n  eventsHistory: number;\r\n}\r\n\r\nexport class InfraSettings {\r\n  // Calculation ratios\r\n  private datastoreRatio = 30; // vm to datastore ratio\r\n  // private hostRatio = 50; // provided by user input\r\n  private rPoolRatio = 20; // hosts to resource pool ratio\r\n  private clusterRatio = 5; // clusters to hosts ratio\r\n  private vappRatio = 2; // vapp to hosts ratio\r\n\r\n  //Average values\r\n  avNumDsOneVm = 0; // Average datastores with one vm- not changeable\r\n  avNicsHost = 4;\r\n  avNumVDisksVm = 3;\r\n  avNumGDiskVm = 0;\r\n  avSdPerHost = 2;\r\n  avSpPerHost = 2; // used by host data size\r\n  historicPerfData = 12;\r\n  eventsHistory = 12;\r\n\r\n  // These are calculated values is using simple mode\r\n  vmThreashold = 1500;\r\n  vmQty = 0\r\n  hostQty = 0;\r\n  resourcePoolQty = 0;\r\n  clusterQty = 0;\r\n  vappQty = 0;\r\n  datastoreQty = 0;\r\n\r\n  updateQty(vmCount: number, hosts: number): void {\r\n    // calculate these values based on the VM count\r\n    // in simple mode.\r\n    this.vmQty = vmCount;\r\n    this.hostQty = hosts;\r\n    this.resourcePoolQty = Math.ceil(vmCount / this.rPoolRatio);\r\n    this.clusterQty = Math.ceil(vmCount / this.clusterRatio);\r\n    this.vappQty = Math.ceil(vmCount / this.vappRatio);\r\n    this.datastoreQty = Math.ceil(vmCount / this.datastoreRatio);\r\n  }\r\n\r\n  // To be used when you run advanced\r\n  getSettings(): returnSettings{\r\n    return {\r\n      vmThreashold: this.vmThreashold,\r\n      resourcePoolQty: this.resourcePoolQty,\r\n      clusterQty: this.clusterQty,\r\n      vappQty: this.vappQty,\r\n      datastoreQty: this.datastoreQty,\r\n      avNicsHost: this.avNicsHost,\r\n      avNumVDisksVm: this.avNumVDisksVm,\r\n      avNumGDiskVm: this.avNumGDiskVm,\r\n      avSdPerHost: this.avSdPerHost,\r\n      avSpPerHost: this.avSpPerHost,\r\n      historicPerfData: this.historicPerfData,\r\n      eventsHistory: this.eventsHistory\r\n    }\r\n  }\r\n\r\n  set updateSettings(data: settingsUpdateInter) {\r\n      this.avNicsHost = data.avNicsHost;\r\n      this.avNumVDisksVm = data.avNumVDisksVm;\r\n      this.avNumGDiskVm = data.avNumGDiskVm;\r\n      this.avSdPerHost = data.avSdPerHost;\r\n      this.historicPerfData = data.historicPerfData;\r\n      this.eventsHistory = data.eventsHistory;\r\n      this.vmQty = data.vmQty;\r\n      this.hostQty = data.hostQty;\r\n      this.clusterQty = data.clusterQty;\r\n      this.vappQty = data.vappQty;\r\n      this.datastoreQty = data.datastoreQty;\r\n  }\r\n}\r\n\r\nexport class VeeamSettings {\r\n  // Veeam ratios\r\n  vbrVmRatio = 1500;\r\n  proxyToVmRatio = 400; // TODO need to look at this\r\n  repoRatio = 3;\r\n  wanAccRatio = 0;\r\n  vmsPerJobRatio = 70;\r\n  jobsRatio = 70; // might not need this\r\n  restoreRatio = 100; // one restore per 100 VMs\r\n\r\n  // Calculated values\r\n  entermanQty = 1; // hard coded\r\n  vbrServers = 1;\r\n  vbrAvNumProxy = 0; // Average number of Proxy  per VBR\r\n  vbrAvNumRepo = 0; // Average number of Repositories  per VBR\r\n  vbrAvJobsServer = 0;  // Average number of Jobs per backup server\r\n  vbrAvNumWan = 0; // Average number of WAN Accelerators  per VBR - hardcoded\r\n  vbrRestore = 0;\r\n\r\n  // non-calculated\r\n  vmQty = 0;\r\n  historicPerfData = 12; // only updated if advanced is used\r\n  eventsHistory = 12;\r\n\r\n  updateQty(vmCount: number){\r\n    this.vmQty = vmCount;\r\n    this.vbrServers = Math.ceil(vmCount / this.vbrVmRatio);\r\n    this.vbrAvNumRepo = Math.ceil(vmCount / this.repoRatio);\r\n    this.vbrAvNumProxy = Math.ceil(vmCount / this.proxyToVmRatio);\r\n    this.vbrAvJobsServer = Math.ceil(vmCount / this.jobsRatio);\r\n    this.vbrRestore = Math.ceil(vmCount / this.restoreRatio);\r\n  }\r\n\r\n  // Can delete this as the ratios don't get updated\r\n  updateSettings(historicPerfData: number, eventsHistory: number) {\r\n    // only exception are these\r\n    this.historicPerfData = historicPerfData;\r\n    this.eventsHistory = eventsHistory;\r\n  }\r\n}\r\n","export class Unknown {\r\n  unknownParam = 0.113828584342402;\r\n  unknownParamExtended: number;\r\n\r\n  constructor() {\r\n    this.unknownParamExtended = 0.113828584342402 / 1024 / 1024;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport {InfraSettings } from './Settings';\r\n\r\ninterface VmSizeInter extends General {\r\n  vmCount: number; // VMs\r\n  avNumDsOneVm: number; // Average number of Datastores where one VM stored\r\n  avNicsHost: number; // Average number of NICs per Host >> as in physical host\r\n  avNumVDisksVm: number; // Average number of virtual disks per VM\r\n  avNumGDiskVm: number; // Average number of Guest Disk per VM\r\n}\r\n\r\n// Interesting that this doesn't include NICS per-host where the VMware version does\r\ninterface HvVmSizeInter extends General {\r\n  hvVmCount: number; // VMs\r\n  hvAvNumNicsVm: number; // Average number of NICs per VM\r\n  haAvNumVdVm: number; // Average number of virtual disks per VM\r\n  hvAvNumGdVm: number; // Average number of Guest Disk per VM\r\n}\r\n\r\n// need to create each class passing in the settings object\r\nclass VmSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  vmSize(): number { // data: VmSizeInter\r\n    const monthDays = 30.44 * this.settings.historicPerfData; // data.historicPerData\r\n    const vmCount = this.settings.vmQty; // changed the name so it doesn't break\r\n    const result =\r\n      vmCount * // only actual varible that is added as part of the method\r\n      ((96 * 7 + 13 * monthDays) *\r\n        (43 +\r\n          10 * this.settings.avNumDsOneVm +  //data.avNumDsOneVm\r\n          5 * this.settings.avNicsHost +\r\n          6 * this.settings.avNumVDisksVm) +\r\n        (48 * 7 + 2 * monthDays) *\r\n          (2 * (this.settings.avNumDsOneVm + this.settings.avNumGDiskVm))) * //data.avNumGDiskVm\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvVmSize(data: HvVmSizeInter): number {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      data.hvVmCount *\r\n      ((288 * 7 + 13 * monthDays) *\r\n        (20 + 8 * 3 * data.haAvNumVdVm + 3 * data.hvAvNumNicsVm) +\r\n        (48 * 7 + 2 * monthDays) * (2 + 2 * data.haAvNumVdVm) +\r\n        (48 * 7 + 4 * monthDays) * (2 * data.hvAvNumGdVm)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // Using in the VeeamOne.ts\r\n  vmSizet() {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const vmCount = this.settings.vmQty; // changed the name so it doesn't break\r\n    const result =\r\n      vmCount *\r\n      ((288 * 7 + 13 * monthDays) *\r\n        (47 +\r\n          13 * this.settings.avNumDsOneVm +\r\n          5 * this.settings.avNicsHost +\r\n          6 * this.settings.avNumDsOneVm) +\r\n        (48 * 7 + 2 * monthDays) *\r\n          (2 * (this.settings.avNumDsOneVm + this.settings.avNumGDiskVm))) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvVmSizet(data: HvVmSizeInter) {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      data.hvVmCount *\r\n      ((288 * 7 + 13 * monthDays) *\r\n        (28 + 8 * 3 * data.haAvNumVdVm + 9 * data.haAvNumVdVm) +\r\n        (48 * 7 + 2 * monthDays) *\r\n          (2 + 2 * data.haAvNumVdVm) +\r\n        (48 * 7 + 4 * monthDays) *\r\n          (2 * data.hvAvNumGdVm)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n\r\nexport {VmSizeInter, HvVmSizeInter, VmSizeCal}","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport { InfraSettings } from './Settings';\r\n\r\nexport interface DatastoreSizeInter extends General {\r\n  datastores: number; // Datastores\r\n}\r\n\r\nexport class DataStoreSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  datastoreSize(): number { // data: DatastoreSizeInter\r\n\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const result =\r\n      this.settings.datastoreQty * // calculated value, was data.datastores\r\n      ((96 * 7 + 13 * monthDays) * 10 + (48 * 7 + 2 * monthDays) * 2) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  datastoreSizet() {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const result =\r\n      this.settings.datastoreQty *\r\n      ((288 * 7 + 13 * monthDays) * 10 +\r\n        (48 * 7 + 2 * monthDays) * 2) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport { InfraSettings } from './Settings';\r\n\r\nexport interface HostSizeInter extends General {\r\n  hosts: number; // Hosts\r\n  datastores: number; // Datastores\r\n  avNicsHost: number; // Average number of NICs per Host\r\n  avVswitchHost: number;\r\n  avSdPerHost: number; // Average number of Storage Adapter per Host\r\n  avSpPerHost: number; // Average number of Storage Path per Host\r\n}\r\n\r\nexport interface HvHostSizeInter extends General {\r\n  hvHosts: number; // Hosts\r\n  hvAvNumVol: number; // Average number of volumes per Host\r\n  hvAvNumNics: number; // Average number of NICs per Host\r\n  avVswitchHost: number; // Average number of Virtual Switch per Host\r\n}\r\n\r\nexport class HostSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings){\r\n    this.settings = settings;\r\n  }\r\n\r\n  // Advanced\r\n  hostSize(): number { // data: HostSizeInter\r\n\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n    const result =\r\n      this.settings.hostQty * // calculated property\r\n      (288 * 7 + 13 * monthDays) *\r\n      (49 +\r\n        (12 * this.settings.datastoreQty) / this.settings.hostQty +\r\n        9 * this.settings.avNicsHost +\r\n        6 * (this.settings.avSdPerHost + this.settings.avSpPerHost)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n  // will probably delete\r\n  hvHosts(data: HvHostSizeInter): number {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      data.hvHosts *\r\n      (96 * 7 + 13 * monthDays) *\r\n      (24 + 6 * data.hvAvNumVol + 5 * data.hvAvNumNics) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // Typical\r\n  hostSizet() {\r\n    const result =\r\n      this.settings.hostQty *\r\n      (288 * 7 + 13 * (30.44 * this.settings.historicPerfData)) *\r\n      (55 +\r\n        (12 * this.settings.datastoreQty) / this.settings.hostQty +\r\n        11 * this.settings.avNicsHost +\r\n        7 * (this.settings.avSdPerHost + this.settings.avSpPerHost)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvHostst(data: HvHostSizeInter) {\r\n    const result =\r\n      data.hvHosts *\r\n      (288 * 7 + 13 * (30.44 * data.historicPerfData)) *\r\n      (46 +\r\n        6 * data.hvAvNumVol +\r\n        10 * data.hvAvNumNics +\r\n        6 * data.avVswitchHost) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { Unknown } from './UnknownParam';\r\nimport { InfraSettings } from './Settings';\r\n\r\ninterface OtherDataInter extends General {\r\n  resourcePool: number; // Resource Pools\r\n  vapp: number; // vApps\r\n  clusters: number;\r\n}\r\n\r\ninterface VhOtherDataInter extends General {\r\n  hvHosts: number;\r\n  historicPerfData: number;\r\n  hvAvNumVol: number;\r\n  hvAvNumNics: number;\r\n  avVswitchHost: number;\r\n  unknownParam: number;\r\n  hvNumCsv?: number;\r\n}\r\n\r\nexport class OtherDataSizeCal {\r\n  private unknown = new Unknown();\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  otherData(): number {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n\r\n    const result =\r\n      ((this.settings.resourcePoolQty + this.settings.vappQty) * (288 * 7 + 13 * monthDays) * 24 +\r\n        this.settings.resourcePoolQty * (288 * 7 + 13 * monthDays) * 27) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  hvOtherData(data: General) {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      (5 * ((96 * 7 + 13 * monthDays) * 2 + (48 * 7 + 3 * monthDays) * 1) +\r\n        this.unknown.unknownParam *\r\n          ((96 * 7 + 13 * monthDays) * 2 + (48 * 7 + 3 * monthDays) * 1)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // has clusters which the other don't\r\n  otherDatat(): number {\r\n    const monthDays = 30.44 * this.settings.historicPerfData;\r\n\r\n    const result =\r\n      ((this.settings.resourcePoolQty + this.settings.vappQty) * (288 * 7 + 13 * monthDays) * 46 +\r\n        this.settings.clusterQty * (288 * 7 + 13 * monthDays) * 56) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n\r\n  // different interface to the advanced version\r\n  hvOtherDatat(data: VhOtherDataInter) {\r\n    const monthDays = 30.44 * data.historicPerfData;\r\n    const result =\r\n      (5 * ((288 * 7 + 13 * monthDays) * 7 + (48 * 7 + 3 * monthDays) * 3) +\r\n        (data.hvNumCsv as number) *\r\n          ((288 * 7 + 13 * monthDays) * (18 + 2) +\r\n            (48 * 7 + 3 * monthDays) * 3)) *\r\n      this.unknown.unknownParamExtended;\r\n    return result;\r\n  }\r\n}\r\n","import { General } from './Interfaces';\r\nimport { PerfSizeInter } from './PerformanceSize';\r\nimport { VbrCal } from './VbrCal';\r\nimport { InfraSettings } from './Settings';\r\n\r\ninterface EventsDataInter extends General {\r\n  vmCount: number; // VMs\r\n  hosts: number; // Hosts\r\n  eventsData: number; // Period of time for keeping events data\r\n}\r\n\r\ninterface EventsVmwareInter extends EventsDataInter {\r\n  datastores: number; // Datastores\r\n  clusters: number; // Clusters\r\n  vapp: number; // vApps\r\n}\r\n\r\n\r\n\r\nexport class EventsDataCal {\r\n\r\n  private settings: InfraSettings;\r\n\r\n  constructor(settings: InfraSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  eventsData(): number {\r\n    const vmCount = this.settings.vmQty;\r\n    const result =\r\n      ((vmCount * 28.6 +\r\n        this.settings.hostQty * 765.8 +\r\n        this.settings.datastoreQty * 7.3 +\r\n        this.settings.clusterQty * 6.2 +\r\n        this.settings.vappQty * 0.1) *\r\n        (30.44 * this.settings.eventsHistory)) /   // data.eventsData\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n\r\n  hvEventsData(data: EventsDataInter) {\r\n    const result =\r\n      ((data.vmCount * 0.1 + data.hosts * 527.2) * (30.44 * this.settings.eventsHistory)) / // data.eventsData\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n  \r\n}\r\n","import { Unknown } from './UnknownParam';\r\nimport { VbrCal } from './VbrCal';\r\nimport { VeeamSettings } from './Settings';\r\n\r\n// export interface PerfSizeInter {\r\n//   vmQty: number;\r\n//   vbrNumVbrEm: number; // Veeam Backup & Replication Enterprise Manager\r\n//   vbrServers: number; // Veeam Backup & Replication servers\r\n//   historicPerfData: number; // Period of time for keeping historical performance and backup data\r\n//   vbrAvNumRepo: number; // Average number of Repositories  per VBR\r\n//   vbrAvNumProxy: number; // Average number of Proxy  per VBR\r\n//   vbrAvNumWan: number; // Average number of WAN Accelerators  per VBR\r\n//   vbrAvJobsServer: number; // Average number of Jobs per backup server\r\n// }\r\n\r\nexport interface PerfSizeInter {\r\n  vmQty: number;\r\n  historicPerfData: number; // Period of time for keeping historical performance and backup data\r\n}\r\n\r\nexport class PerformanceSize {\r\n  private unknown = new Unknown();\r\n\r\n  private vbrSettings: VeeamSettings;\r\n\r\n  constructor(veeamSettings: VeeamSettings) {\r\n    this.vbrSettings = veeamSettings;\r\n  }\r\n\r\n  vbrPerf(): number {\r\n    const monthDays = 30.44 * this.vbrSettings.historicPerfData;\r\n    const timeVar1 = 96 * 7 + 13 * monthDays; // 96 hours? * 7 * 13 * monthDays\r\n    const timeVar2 = 96 * 7 + 25 * monthDays; // 4\r\n    const timeVar3 = 24 * 7 + 2 * monthDays; // hours in 2 x historic years?\r\n    const result =\r\n      ((this.vbrSettings.entermanQty + this.vbrSettings.vbrServers) *\r\n        timeVar1 *\r\n        12 +\r\n        this.vbrSettings.vbrAvNumRepo *\r\n          this.vbrSettings.vbrServers *\r\n          ((timeVar1 + timeVar2 + timeVar3) * 2) + // Repos * vbrServers\r\n        this.vbrSettings.vbrAvNumProxy *\r\n          this.vbrSettings.vbrServers *\r\n          ((timeVar1 + timeVar2) * 3) + // Proxies * vbrServers\r\n        this.vbrSettings.vbrAvNumWan *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          11 + // WAN Acc * vbrServers\r\n        this.vbrSettings.vbrAvJobsServer *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          2 + // Jobs * vbrServers\r\n        timeVar2 * (4 + 184 * this.vbrSettings.vbrServers)) * // additional value\r\n      this.unknown.unknownParamExtended; // Unknown param\r\n    return result;\r\n  }\r\n\r\n  vbrPerft() {\r\n    const monthDays = 30.44 * this.vbrSettings.historicPerfData;\r\n    const timeVar1 = 96 * 7 + 13 * monthDays; // 96 hours? * 7 * 13 * monthDays\r\n    const timeVar2 = 96 * 7 + 25 * monthDays; // 4\r\n    const result =\r\n      ((this.vbrSettings.entermanQty + this.vbrSettings.vbrServers) *\r\n        timeVar1 *\r\n        12 +\r\n        this.vbrSettings.vbrAvNumRepo *\r\n          this.vbrSettings.vbrServers *\r\n          (timeVar1 * 14 + timeVar2 * 1 + (168 + 2 * monthDays) * 2) +\r\n        this.vbrSettings.vbrAvNumProxy *\r\n          this.vbrSettings.vbrServers *\r\n          (timeVar1 * 15 + timeVar2 * 3) +\r\n        this.vbrSettings.vbrAvNumWan *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          14 +\r\n        this.vbrSettings.vbrAvJobsServer *\r\n          this.vbrSettings.vbrServers *\r\n          timeVar1 *\r\n          2 +\r\n        (168 + 25 * monthDays) *\r\n          (4 +\r\n            4 *\r\n              this.vbrSettings.vbrAvJobsServer *\r\n              this.vbrSettings.vbrServers)) *\r\n      this.unknown.unknownParamExtended; // Unknown param\r\n    return result;\r\n  }\r\n}\r\n","import {VeeamSettings} from './Settings';\r\n\r\ninterface VbrEventsInter {\r\n    vbrNumVbrEm: number; // Veeam Backup & Replication Enterprise Manager\r\n    vbrServers: number; // Veeam Backup & Replication servers\r\n    vbrAvNumRepo: number; // Average number of Repositories  per VBR\r\n    vbrAvNumProxy: number; // Average number of Proxy  per VBR\r\n    vbrAvNumWan: number; // Average number of WAN Accelerators  per VBR\r\n    eventsData: number; // Period of time for keeping events data\r\n  }\r\n\r\nexport class VbrEventsCal {\r\n  private settings: VeeamSettings;\r\n\r\n  constructor(settings: VeeamSettings){\r\n    this.settings = settings;\r\n  }\r\n\r\n  vbrEvents() {\r\n    const result =\r\n      ((this.settings.entermanQty * 0.47 + //data.vbrNumVbrEn\r\n        this.settings.vbrServers * 1963 +\r\n        this.settings.vbrAvNumRepo * this.settings.vbrServers * 0.18 +\r\n        this.settings.vbrAvNumProxy * this.settings.vbrServers * 0.37 +\r\n        this.settings.vbrAvNumWan * this.settings.vbrServers * 0.55) *\r\n        (30.44 * this.settings.eventsHistory)) /\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n\r\n  // Same as advanced\r\n  // vbrEventst(data: VbrEventsInter) {\r\n  //   return this.vbrEvents(data);\r\n  // }\r\n}\r\n","import { VbrCal } from './VbrCal';\r\nimport { VeeamSettings } from './Settings';\r\n\r\ninterface VbrDbTimeInter {\r\n  vmQty: number; // added\r\n  historicPerfData: number;\r\n}\r\n\r\nexport class VbrDbTime {\r\n  private settings: VeeamSettings;\r\n\r\n  constructor(settings: VeeamSettings) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  vbrDb() {\r\n    const result =\r\n      ((this.settings.historicPerfData / 12) *\r\n        this.settings.vbrServers *\r\n        this.settings.vbrAvJobsServer *\r\n        (365 * 2179 +\r\n          365 * 1436 * this.settings.vbrAvJobsServer +\r\n          366 * 3262 * this.settings.vbrRestore)) /\r\n      1024 /\r\n      1024 /\r\n      1024;\r\n    return result;\r\n  }\r\n}\r\n","// Main interface for the app\r\n\r\nimport {\r\n  General,\r\n  HostSizeInter,\r\n  HvHostSizeInter,\r\n  DatastoreSizeInter,\r\n  OtherDataInter,\r\n  EventsDataInter,\r\n  HvEventsDataInter,\r\n} from './Interfaces';\r\n\r\nimport { InfraSettings, VeeamSettings } from './Settings'\r\n\r\nimport {VmSizeInter, HvVmSizeInter, VmSizeCal} from './VmSize';\r\nimport { DataStoreSizeCal } from './DatastoreSize';\r\nimport { HostSizeCal } from './HostSize';\r\nimport { OtherDataSizeCal} from './OtherDataSize';\r\nimport { EventsDataCal } from './EventsData';\r\nimport { PerformanceSize } from './PerformanceSize';\r\nimport { VbrEventsCal } from './VbrEvents';\r\nimport { VbrDbTime } from './VbrDbTime';\r\n\r\ninterface formData {\r\n\r\n}\r\n\r\n\r\ndocument.getElementById('simpleNextBtn')?.addEventListener('click', ()=> {\r\n  const vmQty = (document.getElementById('vmQty') as HTMLInputElement).value;\r\n  const hostQty = (document.getElementById('hostQty') as HTMLInputElement).value;\r\n\r\n  // create new instance of the Requiremets class below\r\n  const requirements = new Requirements();\r\n\r\n  // Check if the advanced is checked\r\n  if((document.getElementById('advancedCheck') as HTMLInputElement).checked) {\r\n    // Updates the settings for the hypervisor which calculates the requirements based on ratios\r\n    // see the Settings.TS file\r\n    requirements.settings.updateQty(parseInt(vmQty), parseInt(hostQty));\r\n\r\n    // Get the updated settings and output the results into the second form group\r\n    const settings = requirements.settings.getSettings();\r\n    (document.getElementById('avNumVDisksVm') as HTMLInputElement).value = settings.avNumVDisksVm.toFixed(2);\r\n    (document.getElementById('clusterQty') as HTMLInputElement).value = settings.clusterQty.toFixed(2);\r\n    (document.getElementById('avNumGDiskVm') as HTMLInputElement).value = settings.avNumGDiskVm.toFixed(2);\r\n    (document.getElementById('avNicsHost') as HTMLInputElement).value = settings.avNicsHost.toFixed(2);\r\n    (document.getElementById('historicPerfData') as HTMLInputElement).value = settings.historicPerfData.toFixed(2);\r\n    (document.getElementById('avSdPerHost') as HTMLInputElement).value = settings.avSdPerHost.toFixed(2);\r\n    (document.getElementById('eventsHistory') as HTMLInputElement).value = settings.eventsHistory.toFixed(2);\r\n    (document.getElementById('vappQty') as HTMLInputElement).value = settings.vappQty.toFixed(2); \r\n    (document.getElementById('datastoreQty') as HTMLInputElement).value = settings.datastoreQty.toFixed(2);\r\n  } else {\r\n\r\n    // If advanced isn't selected the run the calculation using the ratios only\r\n    requirements.runCal(parseInt(vmQty), parseInt(hostQty));\r\n    (document.getElementById('vmDataGB') as HTMLInputElement).value = requirements.vmCap.toFixed(2);\r\n    (document.getElementById('hostDataGB') as HTMLInputElement).value = requirements.hostCap.toFixed(2);\r\n    (document.getElementById('dataStoreGB') as HTMLInputElement).value = requirements.dataStoreCap.toFixed(2);\r\n    (document.getElementById('eventGB') as HTMLInputElement).value = requirements.eventsData.toFixed(2);\r\n    (document.getElementById('vbrperfGB') as HTMLInputElement).value = requirements.vbrPerfData.toFixed(2);\r\n    (document.getElementById('vbrEventGB') as HTMLInputElement).value = requirements.vbrEventsData.toFixed(2);\r\n    (document.getElementById('vbrJobGB') as HTMLInputElement).value = requirements.vbrDbTimeData.toFixed(2);\r\n  }\r\n})\r\n\r\n// \r\ndocument.getElementById('advancedNextBtn')?.addEventListener('click', ()=> {\r\n  // Create a new instances of the Requirements class\r\n  const requiremets = new Requirements();\r\n\r\n  // Grab the updated elements from the form\r\n  const vmQty = parseInt((document.getElementById('vmQty') as HTMLInputElement).value);\r\n  const hostQty = parseInt((document.getElementById('hostQty') as HTMLInputElement).value);\r\n  const clusterQty = parseInt((document.getElementById('clusterQty') as HTMLInputElement).value);\r\n  const avNumVDisksVm = parseInt((document.getElementById('avNumVDisksVm') as HTMLInputElement).value);\r\n  const avNumGDiskVm = parseInt((document.getElementById('avNumGDiskVm') as HTMLInputElement).value);\r\n  const avNicsHost = parseInt((document.getElementById('avNicsHost') as HTMLInputElement).value);\r\n  const historicPerfData = parseInt((document.getElementById('historicPerfData') as HTMLInputElement).value);\r\n  const avSdPerHost = parseInt((document.getElementById('avSdPerHost') as HTMLInputElement).value);\r\n  const eventsHistory = parseInt((document.getElementById('eventsHistory') as HTMLInputElement).value);\r\n  const vappQty = parseInt((document.getElementById('vappQty') as HTMLInputElement).value);\r\n  const datastoreQty = parseInt((document.getElementById('datastoreQty') as HTMLInputElement).value);\r\n\r\n  // Create a new single object with the form data\r\n  const data = {\r\n    vmQty,\r\n    hostQty,\r\n    clusterQty,\r\n    avNumVDisksVm,\r\n    avNumGDiskVm,\r\n    avNicsHost,\r\n    historicPerfData,\r\n    avSdPerHost,\r\n    eventsHistory,\r\n    vappQty,\r\n    datastoreQty\r\n  }\r\n  // update the settings which uses a \"set\"\r\n  requiremets.settings.updateSettings = data;\r\n\r\n  // Update the veeam settings with the timescales which are the only variable\r\n  // All other settings are caculated from the VM Quantity\r\n  requiremets.veeamSettings.updateSettings(historicPerfData, eventsHistory);\r\n\r\n  // Now run the calculation based on the new settings\r\n  requiremets.runCal(vmQty, hostQty);\r\n\r\n  // Output the final results to the DOM\r\n  (document.getElementById('vmDataGB') as HTMLInputElement).value = requiremets.vmCap.toFixed(2);\r\n  (document.getElementById('hostDataGB') as HTMLInputElement).value = requiremets.hostCap.toFixed(2);\r\n  (document.getElementById('dataStoreGB') as HTMLInputElement).value = requiremets.dataStoreCap.toFixed(2);\r\n  (document.getElementById('eventGB') as HTMLInputElement).value = requiremets.eventsData.toFixed(2);\r\n  (document.getElementById('vbrperfGB') as HTMLInputElement).value = requiremets.vbrPerfData.toFixed(2);\r\n  (document.getElementById('vbrEventGB') as HTMLInputElement).value = requiremets.vbrEventsData.toFixed(2);\r\n  (document.getElementById('vbrJobGB') as HTMLInputElement).value = requiremets.vbrDbTimeData.toFixed(2);\r\n})\r\n\r\nclass Requirements {\r\n  vmCap = 0;\r\n  hostCap = 0;\r\n  dataStoreCap = 0;\r\n  otherData = 0;\r\n  eventsData = 0;\r\n  vbrPerfData = 0;\r\n  vbrEventsData = 0;\r\n  vbrDbTimeData = 0;\r\n\r\n  settings = new InfraSettings()\r\n  veeamSettings = new VeeamSettings()\r\n\r\n  // update the Infra settings- used with advanced only\r\n  updateInfraSettings(settings: InfraSettings){\r\n    settings.updateSettings = settings;\r\n  }\r\n\r\n  // update the Veeam settings - used with advanced only\r\n  updateVeeamSettings(historicPerfData: number, eventsHistory: number){\r\n    this.veeamSettings.updateSettings(historicPerfData, eventsHistory)\r\n  }\r\n\r\n  runCal(vmCount: number, hosts: number){\r\n    this.settings.updateQty(vmCount, hosts);\r\n    this.veeamSettings.updateQty(vmCount);\r\n\r\n    const vmSizeCapCal = new VmSizeCal(this.settings);\r\n    const hostSizeCal = new HostSizeCal(this.settings);\r\n    const datastoreSizeCal = new DataStoreSizeCal(this.settings);\r\n    const otherDataSizeCal = new OtherDataSizeCal(this.settings);\r\n    const eventsDataSizeCal = new EventsDataCal(this.settings);\r\n    const vbrPerfDataSizeCal = new PerformanceSize(this.veeamSettings);\r\n    const vbrEventsDataSizeCal = new VbrEventsCal(this.veeamSettings);\r\n    const vbrDbTimeSizeCal = new VbrDbTime(this.veeamSettings);\r\n\r\n    // check the threashold then run typical or advanced\r\n    if(vmCount < this.settings.vmThreashold){\r\n      // Advanced\r\n      this.vmCap = vmSizeCapCal.vmSizet();\r\n      this.hostCap = hostSizeCal.hostSizet();\r\n      this.dataStoreCap = datastoreSizeCal.datastoreSizet();\r\n      this.otherData = otherDataSizeCal.otherDatat();\r\n      this.eventsData = eventsDataSizeCal.eventsData(); // same for both\r\n      this.vbrPerfData = vbrPerfDataSizeCal.vbrPerft();\r\n      this.vbrEventsData = vbrEventsDataSizeCal.vbrEvents();\r\n      this.vbrDbTimeData = vbrDbTimeSizeCal.vbrDb();\r\n    } else {\r\n      // Typical\r\n      this.vmCap = vmSizeCapCal.vmSize();\r\n      this.hostCap = hostSizeCal.hostSize();\r\n      this.dataStoreCap = datastoreSizeCal.datastoreSize();\r\n      this.otherData = otherDataSizeCal.otherData();\r\n      this.eventsData = eventsDataSizeCal.eventsData();\r\n      this.vbrPerfData = vbrPerfDataSizeCal.vbrPerf();\r\n      this.vbrEventsData = vbrEventsDataSizeCal.vbrEvents();\r\n      this.vbrDbTimeData = vbrDbTimeSizeCal.vbrDb();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"]}